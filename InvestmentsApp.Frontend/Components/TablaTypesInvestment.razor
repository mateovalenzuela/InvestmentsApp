@using InvestmentsApp.Frontend.Services
@inject ITypeInvestmentService TypeInvestmentService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<div class="">
    <table class="table table-striped table-responsive">
        <thead class="table-dark">
            <tr>
                <th class="text-center" scope="col">Descripción</th>
                <th class="text-center" scope="col">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var type in TypesInvestments)
            {
                <tr>
                    <td class="text-center">@type.Descripcion</td>
                    <td class="text-center">
                        <EditButton OnClick="() => HandleUpdateTypeInvestment(type.Id)" />
                        <DeleteButton OnClick="() => HandleDeleteTypesInvestment(type)" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


@code {
    [Parameter]
    public IEnumerable<ClientSwagger.TypeInvestmentDto> TypesInvestments { get; set; }

    private async Task ConfirmDeleteTypesInvestment(ClientSwagger.TypeInvestmentDto typeInvestment)
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", $"¿Estás seguro de que deseas eliminr el tipo de Inversión {typeInvestment.Descripcion}?");

        if (confirmed)
        {
            await DeleteTypeInvestment(typeInvestment.Id);
            Navigation.NavigateTo("/typesInvestment", forceLoad: true);
        }
    }

    private async Task HandleDeleteTypesInvestment(ClientSwagger.TypeInvestmentDto typeInvestment)
    {
        await ConfirmDeleteTypesInvestment(typeInvestment);
    }

    private async Task DeleteTypeInvestment(long id)
    {
        try {
            await TypeInvestmentService.DeleteTypeInvestment(id);
        }
        catch (Exception ex) {
            Console.WriteLine("Error al eliminar" + ex.ToString());
        }
    }

    private void HandleUpdateTypeInvestment(long id)
    {
        Navigation.NavigateTo($"/typeInvestmentUpdate/{id}");
    }

}
