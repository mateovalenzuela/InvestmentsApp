@page "/"
@using InvestmentsApp.Frontend.Services
@inject IInvestmentService InvestmentService
@inject NavigationManager Navigation

<h3 class="text-primary">Lista de Inversiones</h3>

<div class="d-flex justify-content-between align-items-center mb-3">
    <AgregarButton OnClick="() => NavigateToAddInvestment()" />
</div>

@if (investments == null)
{
    <div class="alert alert-info">Cargando...</div>
}
else @if (investments.Count() == 0)
{
    <div class="alert alert-warning">No hay inversiones cargadas</div>
}
else
{
    <TablaInvestment Investments="@investments"></TablaInvestment>
}

@code {
    private IEnumerable<ClientSwagger.InvestmentDto>? investments;

    protected override async Task OnInitializedAsync()
    {
        try {
            await GetInvestments();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al obtener las inversiónes: {ex.Message}");
        }
        
    }

    private async Task GetInvestments()
    {
        investments = await InvestmentService.GetInvestments();
    }

    private void NavigateToAddInvestment()
    {
        Navigation.NavigateTo("/investmentAddForm");
    }
   
}
