@page "/investmentDetail/{id:long}"
@using InvestmentsApp.Frontend.Services
@inject IInvestmentService InvestmentService
@inject NavigationManager Navigation

<h3>Detalle de Inversión</h3>

@if (investment == null)
{
    <p>Cargando datos de la inversión...</p>
}
else
{
    <div class="card">
        <div class="card-header">
            <h4>@investment.Tikcker</h4>
        </div>
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-4">Ticker</dt>
                <dd class="col-sm-8">@investment.Tikcker</dd>

                <dt class="col-sm-4">Tipo de Inversión</dt>
                <dd class="col-sm-8">@investment.TypeInvestmentDescripcion</dd>

                <dt class="col-sm-4">Descripción</dt>
                <dd class="col-sm-8">@investment.Descripcion</dd>

                <dt class="col-sm-4">Fecha de Entrada</dt>
                <dd class="col-sm-8">@investment.FechaEntrada.ToLocalTime().ToString("dd/MM/yyyy")</dd>

                <dt class="col-sm-4">Fecha de Cierre</dt>
                <dd class="col-sm-8">@investment.FechaCierre.ToLocalTime().ToString("dd/MM/yyyy")</dd>

                <dt class="col-sm-4">Importe Inicial</dt>
                <dd class="col-sm-8">$@investment.ImporteInicial</dd>

                <dt class="col-sm-4">Importe Final</dt>
                <dd class="col-sm-8">$@investment.ImporteFinal</dd>

                <dt class="col-sm-4">Rendimiento</dt>
                <dd class="col-sm-8">@investment.Rendimiento.ToString("0.00")%</dd>

                <dt class="col-sm-4">Fecha de Registro</dt>
                <dd class="col-sm-8">@investment.FechaCreacion.ToLocalTime().ToString("dd/MM/yyyy")</dd>
            </dl>
            <button class="btn btn-primary" @onclick="NavigateBack">Volver</button>
        </div>
    </div>
}

@code {
    [Parameter]
    public long id { get; set; }

    private ClientSwagger.InvestmentDto? investment;

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            investment = await InvestmentService.GetSelectedInvestment(id);

            if (investment == null)
            {
                Console.WriteLine("No se encontró la inversión.");
                Navigation.NavigateTo("/");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar la inversión: {ex.Message}");
            Navigation.NavigateTo("/");
        }
    }

    private void NavigateBack()
    {
        Navigation.NavigateTo("/");
    }
}
